name: Compile Binaries
run-name: Compile Binaries -> ${{ github.actor }} triggered a build ðŸš€
on:
  workflow_dispatch:
    branches: [ "main" ]

jobs:
  build-nixes:
    name: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          - os: macos-latest
            triple: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set PACKAGE_VERSION
        run: echo "PACKAGE_VERSION=0.1.0" >> $GITHUB_ENV
      - name: Set GIT_VERSION
        run: echo "GIT_VERSION=build.$(git rev-list --all --count).$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Set VER
        run: echo "VER=$PACKAGE_VERSION+$GIT_VERSION" >> $GITHUB_ENV
      - name: Print
        run: echo PACKAGE_VERSION=$PACKAGE_VERSION GIT_VERSION=$GIT_VERSION VER=$VER
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: zip up
        run: zip -j galactica-${{ matrix.triple }}-${{ env.VER }}.zip target/release/galactica
      - uses: actions/upload-artifact@v3
        with:
          path: galactica-${{ matrix.triple }}-${{ env.VER }}.zip
  build-windows:
    name: build windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set PACKAGE_VERSION
        run: echo "PACKAGE_VERSION=0.1.0" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Set GIT_VERSION
        run: echo "GIT_VERSION=build.$(git rev-list --all --count).$(git rev-parse --short HEAD)" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Set VER
        run: echo "VER=${{ env.PACKAGE_VERSION }}+${{ env.GIT_VERSION }}" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Print
        run: echo PACKAGE_VERSION=$${{ env.PACKAGE_VERSION }} GIT_VERSION=${{ env.GIT_VERSION }} VER=${{ env.VER }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: zip up
        run: Compress-Archive -Path target/release/galactica.exe -DestinationPath galactica-x86_64-pc-windows-msvc-${{ env.VER }}.zip
      - uses: actions/upload-artifact@v3
        with:
          path: |
            galactica-${{ matrix.triple }}-${{ env.VER }}.zip          
      - uses: actions/upload-artifact@v3
        with:
          path: galactica-x86_64-pc-windows-msvc-${{ env.VER }}.zip
  upload:
    name: upload to github release
    needs: ["build-nixes", "build-windows"]
    runs-on: ubuntu-latest
    steps:
      - name: download assets
        uses: actions/download-artifact@v3
      - name: Display structure of downloaded files
        run: ls -R
      - name: copy zips
        run: cp artifact/*.zip .
      - name: Display structure of downloaded files
        run: ls -R
      - name: calculate hashes
        run: for f in *.zip; do shasum -a 256 $f > $f.sha256; done 
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "0.1.0"
          files: |
            "*.zip"
            ".sha256"
          draft: false
          prerelease: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}